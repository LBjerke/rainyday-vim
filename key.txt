warning: Git tree '/home/loki/Code/RainyDay/rainyday-vim' is dirty

{ {
    abbr = 0,
    buffer = 0,
    callback = <function 1>,
    desc = ":help v_#-default",
    expr = 1,
    lhs = "#",
    lhsraw = "#",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "%",
    lhsraw = "%",
    lnum = 72,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitVisualForward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 2>,
    desc = ":help v_star-default",
    expr = 1,
    lhs = "*",
    lhsraw = "*",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = ":help v_@-default",
    expr = 1,
    lhs = "@",
    lhsraw = "@",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    rhs = "mode() ==# 'V' ? ':normal! @'.getcharstr().'<CR>' : '@'",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    desc = ":help v_Q-default",
    expr = 1,
    lhs = "Q",
    lhsraw = "Q",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    rhs = "mode() ==# 'V' ? ':normal! @<C-R>=reg_recorded()<CR><CR>' : 'Q'",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Add a surrounding pair around a visual selection",
    expr = 0,
    lhs = "S",
    lhsraw = "S",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-visual)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[x",
    lhsraw = "[x",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-xml-encode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[u",
    lhsraw = "[u",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-url-encode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[C",
    lhsraw = "[C",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-encode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[y",
    lhsraw = "[y",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-encode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[e",
    lhsraw = "[e",
    lnum = 295,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-move-selection-up)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[n",
    lhsraw = "[n",
    lnum = 183,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-context-previous)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[%",
    lhsraw = "[%",
    lnum = 80,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitVisualMultiBackward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]x",
    lhsraw = "]x",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-xml-decode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]u",
    lhsraw = "]u",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-url-decode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]C",
    lhsraw = "]C",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-decode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]y",
    lhsraw = "]y",
    lnum = 609,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-decode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]e",
    lhsraw = "]e",
    lnum = 296,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-move-selection-down)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]n",
    lhsraw = "]n",
    lnum = 184,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-context-next)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]%",
    lhsraw = "]%",
    lnum = 81,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitVisualMultiForward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "a%",
    lhsraw = "a%",
    lnum = 86,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitVisualTextObject)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "g%",
    lhsraw = "g%",
    lnum = 73,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitVisualBackward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Add a surrounding pair around a visual selection, on new lines",
    expr = 0,
    lhs = "gS",
    lhsraw = "gS",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-visual-line)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 3>,
    desc = "Toggle comment",
    expr = 1,
    lhs = "gc",
    lhsraw = "gc",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 4>,
    desc = "Opens filepath or URI under cursor with the system handler (file explorer, web browser, â€¦)",
    expr = 0,
    lhs = "gx",
    lhsraw = "gx",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-xml-decode)",
    lhsraw = "<80><fd>S(unimpaired-xml-decode)",
    lnum = 606,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_xml_decode",
    lhsraw = "<80><fd>Sunimpaired_xml_decode",
    lnum = 603,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-xml-encode)",
    lhsraw = "<80><fd>S(unimpaired-xml-encode)",
    lnum = 606,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_xml_encode",
    lhsraw = "<80><fd>Sunimpaired_xml_encode",
    lnum = 603,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-url-decode)",
    lhsraw = "<80><fd>S(unimpaired-url-decode)",
    lnum = 606,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_url_decode",
    lhsraw = "<80><fd>Sunimpaired_url_decode",
    lnum = 603,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-url-encode)",
    lhsraw = "<80><fd>S(unimpaired-url-encode)",
    lnum = 606,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_url_encode",
    lhsraw = "<80><fd>Sunimpaired_url_encode",
    lnum = 603,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-string-decode)",
    lhsraw = "<80><fd>S(unimpaired-string-decode)",
    lnum = 606,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_string_decode",
    lhsraw = "<80><fd>Sunimpaired_string_decode",
    lnum = 603,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-string-encode)",
    lhsraw = "<80><fd>S(unimpaired-string-encode)",
    lnum = 606,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_string_encode",
    lhsraw = "<80><fd>Sunimpaired_string_encode",
    lnum = 603,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveSelectionDown",
    lhsraw = "<80><fd>SunimpairedMoveSelectionDown",
    lnum = 291,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionDown(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveSelectionUp",
    lhsraw = "<80><fd>SunimpairedMoveSelectionUp",
    lnum = 290,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionUp(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-selection-down)",
    lhsraw = "<80><fd>S(unimpaired-move-selection-down)",
    lnum = 287,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionDown(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-selection-up)",
    lhsraw = "<80><fd>S(unimpaired-move-selection-up)",
    lnum = 286,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionUp(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedContextNext",
    lhsraw = "<80><fd>SunimpairedContextNext",
    lnum = 191,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe 'normal! gv'|call <SNR>63_Context(0)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedContextPrevious",
    lhsraw = "<80><fd>SunimpairedContextPrevious",
    lnum = 190,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe 'normal! gv'|call <SNR>63_Context(1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-context-next)",
    lhsraw = "<80><fd>S(unimpaired-context-next)",
    lnum = 177,
    mode = "v",
    mode_bits = 66,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe 'normal! gv'|call <SNR>63_Context(0)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-context-previous)",
    lhsraw = "<80><fd>S(unimpaired-context-previous)",
    lnum = 176,
    mode = "v",
    mode_bits = 66,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe 'normal! gv'|call <SNR>63_Context(1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 5>,
    desc = "LuaSnip: Repeat last node expansion",
    expr = 0,
    lhs = "<Plug>luasnip-expand-repeat",
    lhsraw = "<80><fd>Sluasnip-expand-repeat",
    lnum = 0,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitVisualTextObject)",
    lhsraw = "<80><fd>S(MatchitVisualTextObject)",
    lnum = 67,
    mode = "x",
    mode_bits = 2,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitVisualMultiForward)",
    lhsraw = "<80><fd>S(MatchitVisualMultiForward)",
    lnum = 62,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#MultiMatch(\"W\",  \"n\")<CR>m'gv``",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitVisualMultiBackward)",
    lhsraw = "<80><fd>S(MatchitVisualMultiBackward)",
    lnum = 61,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#MultiMatch(\"bW\", \"n\")<CR>m'gv``",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitVisualBackward)",
    lhsraw = "<80><fd>S(MatchitVisualBackward)",
    lnum = 54,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitVisualForward)",
    lhsraw = "<80><fd>S(MatchitVisualForward)",
    lnum = 52,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col(\"''\") != col(\"$\") | exe \":normal! m'\" | endif<CR>gv``",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 6>,
    desc = "Add a surrounding pair around a visual selection, on new lines",
    expr = 1,
    lhs = "<Plug>(nvim-surround-visual-line)",
    lhsraw = "<80><fd>S(nvim-surround-visual-line)",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 7>,
    desc = "Add a surrounding pair around a visual selection",
    expr = 1,
    lhs = "<Plug>(nvim-surround-visual)",
    lhsraw = "<80><fd>S(nvim-surround-visual)",
    lnum = 0,
    mode = "x",
    mode_bits = 2,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  } }warning: Git tree '/home/loki/Code/RainyDay/rainyday-vim' is dirty

{ {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "%",
    lhsraw = "%",
    lnum = 74,
    mode = "o",
    mode_bits = 4,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitOperationForward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[n",
    lhsraw = "[n",
    lnum = 185,
    mode = "o",
    mode_bits = 4,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-context-previous)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[%",
    lhsraw = "[%",
    lnum = 82,
    mode = "o",
    mode_bits = 4,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitOperationMultiBackward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]n",
    lhsraw = "]n",
    lnum = 186,
    mode = "o",
    mode_bits = 4,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-context-next)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]%",
    lhsraw = "]%",
    lnum = 83,
    mode = "o",
    mode_bits = 4,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitOperationMultiForward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "g%",
    lhsraw = "g%",
    lnum = 75,
    mode = "o",
    mode_bits = 4,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitOperationBackward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 1>,
    desc = "Comment textobject",
    expr = 0,
    lhs = "gc",
    lhsraw = "gc",
    lnum = 0,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveSelectionDown",
    lhsraw = "<80><fd>SunimpairedMoveSelectionDown",
    lnum = 291,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionDown(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveSelectionUp",
    lhsraw = "<80><fd>SunimpairedMoveSelectionUp",
    lnum = 290,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionUp(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-selection-down)",
    lhsraw = "<80><fd>S(unimpaired-move-selection-down)",
    lnum = 287,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionDown(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-selection-up)",
    lhsraw = "<80><fd>S(unimpaired-move-selection-up)",
    lnum = 286,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionUp(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedContextNext",
    lhsraw = "<80><fd>SunimpairedContextNext",
    lnum = 193,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_ContextMotion(0)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedContextPrevious",
    lhsraw = "<80><fd>SunimpairedContextPrevious",
    lnum = 192,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_ContextMotion(1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-context-next)",
    lhsraw = "<80><fd>S(unimpaired-context-next)",
    lnum = 179,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_ContextMotion(0)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-context-previous)",
    lhsraw = "<80><fd>S(unimpaired-context-previous)",
    lnum = 178,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_ContextMotion(1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 2>,
    desc = "LuaSnip: Repeat last node expansion",
    expr = 0,
    lhs = "<Plug>luasnip-expand-repeat",
    lhsraw = "<80><fd>Sluasnip-expand-repeat",
    lnum = 0,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitOperationMultiForward)",
    lhsraw = "<80><fd>S(MatchitOperationMultiForward)",
    lnum = 64,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>call matchit#MultiMatch("W",  "o")<CR>',
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitOperationMultiBackward)",
    lhsraw = "<80><fd>S(MatchitOperationMultiBackward)",
    lnum = 63,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>call matchit#MultiMatch("bW", "o")<CR>',
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitOperationBackward)",
    lhsraw = "<80><fd>S(MatchitOperationBackward)",
    lnum = 56,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#Match_wrapper('',0,'o')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitOperationForward)",
    lhsraw = "<80><fd>S(MatchitOperationForward)",
    lnum = 55,
    mode = "o",
    mode_bits = 4,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#Match_wrapper('',1,'o')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  } }
warning: Git tree '/home/loki/Code/RainyDay/rainyday-vim' is dirty

{ {
    abbr = 0,
    buffer = 0,
    callback = <function 1>,
    expr = 0,
    lhs = " dt",
    lhsraw = " dt",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 2>,
    desc = "diagnostics floating window",
    expr = 0,
    lhs = " e",
    lhsraw = " e",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 3>,
    desc = "[t]ab: [q]uit/close",
    expr = 0,
    lhs = " tq",
    lhsraw = " tq",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 4>,
    desc = "[t]ab: [n]ew",
    expr = 0,
    lhs = " tn",
    lhsraw = " tn",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "%",
    lhsraw = "%",
    lnum = 70,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitNormalForward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    desc = ":help &-default",
    expr = 0,
    lhs = "&",
    lhsraw = "&",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":&&<CR>",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<lt>p",
    lhsraw = "<p",
    lnum = 440,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-below-leftward)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<lt>P",
    lhsraw = "<P",
    lnum = 439,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-above-leftward)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<lt>s<Esc>",
    lhsraw = "<s\27",
    lnum = 371,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = "",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<lt>s",
    lhsraw = "<s",
    lnum = 368,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-enable)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "=p",
    lhsraw = "=p",
    lnum = 442,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-below-reformat)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "=P",
    lhsraw = "=P",
    lnum = 441,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-above-reformat)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "=s<Esc>",
    lhsraw = "=s\27",
    lnum = 370,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = "",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "=s",
    lhsraw = "=s",
    lnum = 367,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-toggle)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = ">p",
    lhsraw = ">p",
    lnum = 438,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-below-rightward)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = ">P",
    lhsraw = ">P",
    lnum = 437,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-above-rightward)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = ">s<Esc>",
    lhsraw = ">s\27",
    lnum = 372,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = "",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = ">s",
    lhsraw = ">s",
    lnum = 369,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-disable)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "[Y]ank to end of line",
    expr = 0,
    lhs = "Y",
    lhsraw = "Y",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "y$",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[xx",
    lhsraw = "[xx",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-xml-encode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[x",
    lhsraw = "[x",
    lnum = 608,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-xml-encode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[uu",
    lhsraw = "[uu",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-url-encode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[u",
    lhsraw = "[u",
    lnum = 608,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-url-encode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[CC",
    lhsraw = "[CC",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-encode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[yy",
    lhsraw = "[yy",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-encode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[y",
    lhsraw = "[y",
    lnum = 608,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-encode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[P",
    lhsraw = "[P",
    lnum = 434,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-above)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[p",
    lhsraw = "[p",
    lnum = 432,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-above)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[o<Esc>",
    lhsraw = "[o\27",
    lnum = 365,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = "",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[o",
    lhsraw = "[o",
    lnum = 362,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-enable)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[ ",
    lhsraw = "[ ",
    lnum = 253,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-blank-up)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[n",
    lhsraw = "[n",
    lnum = 181,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-context-previous)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[f",
    lhsraw = "[f",
    lnum = 170,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-directory-previous)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[<C-T>",
    lhsraw = "[<80><fc>\4T",
    lnum = 67,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-ptprevious)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[T",
    lhsraw = "[T",
    lnum = 53,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-tfirst)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[t",
    lhsraw = "[t",
    lnum = 51,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-tprevious)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[<C-Q>",
    lhsraw = "[<80><fc>\4Q",
    lnum = 60,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-cpfile)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[Q",
    lhsraw = "[Q",
    lnum = 53,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-cfirst)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[q",
    lhsraw = "[q",
    lnum = 51,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-cprevious)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[<C-L>",
    lhsraw = "[<80><fc>\4L",
    lnum = 60,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-lpfile)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[A",
    lhsraw = "[A",
    lnum = 53,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-first)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[a",
    lhsraw = "[a",
    lnum = 51,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-previous)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "[%",
    lhsraw = "[%",
    lnum = 78,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitNormalMultiBackward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 5>,
    desc = "previous [h]int diagnostic",
    expr = 0,
    lhs = "[h",
    lhsraw = "[h",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 6>,
    desc = "previous [w]arning diagnostic",
    expr = 0,
    lhs = "[w",
    lhsraw = "[w",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 7>,
    desc = "previous [e]rror diagnostic",
    expr = 0,
    lhs = "[e",
    lhsraw = "[e",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 8>,
    desc = "first [L]oclist entry",
    expr = 0,
    lhs = "[L",
    lhsraw = "[L",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 9>,
    desc = "cycle [l]oclist left",
    expr = 0,
    lhs = "[l",
    lhsraw = "[l",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 10>,
    desc = "first quickfix entry",
    expr = 0,
    lhs = "[C",
    lhsraw = "[C",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 11>,
    desc = "[c]ycle quickfix left",
    expr = 0,
    lhs = "[c",
    lhsraw = "[c",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 12>,
    desc = "first [B]uffer",
    expr = 0,
    lhs = "[B",
    lhsraw = "[B",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 13>,
    desc = "previous [b]uffer",
    expr = 0,
    lhs = "[b",
    lhsraw = "[b",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 14>,
    desc = "previous [d]iagnostic",
    expr = 0,
    lhs = "[d",
    lhsraw = "[d",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 15>,
    desc = "[t]elescope lsp dynamic w[o]rkspace symbols",
    expr = 0,
    lhs = "\\to",
    lhsraw = "\\to",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 16>,
    desc = "[t]elescope lsp [d]ocument symbols",
    expr = 0,
    lhs = "\\td",
    lhsraw = "\\td",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 17>,
    desc = "[t]elescope current [b]uffer [f]uzzy find",
    expr = 0,
    lhs = "\\tbf",
    lhsraw = "\\tbf",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 18>,
    desc = "[t]elescope [b]uffers [b]",
    expr = 0,
    lhs = "\\tbb",
    lhsraw = "\\tbb",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 19>,
    desc = "[t]elescope [r]egisters",
    expr = 0,
    lhs = "\\tr",
    lhsraw = "\\tr",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 20>,
    desc = "[t]elescope [l]oclist",
    expr = 0,
    lhs = "\\tl",
    lhsraw = "\\tl",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 21>,
    desc = "[t]elescope command history [q]",
    expr = 0,
    lhs = "\\tq",
    lhsraw = "\\tq",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 22>,
    desc = "[t]elescope quickfix list [c]",
    expr = 0,
    lhs = "\\tc",
    lhsraw = "\\tc",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 23>,
    desc = "[t]elescope project files [g]",
    expr = 0,
    lhs = "\\tg",
    lhsraw = "\\tg",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 24>,
    desc = "[telescope] grep current string [*]",
    expr = 0,
    lhs = "\\*",
    lhsraw = "\\*",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 25>,
    desc = "[t]elescope grep current string [*] in current filetype",
    expr = 0,
    lhs = "\\t*",
    lhsraw = "\\t*",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 26>,
    desc = "[t]elescope [f]uzzy grep",
    expr = 0,
    lhs = "\\tf",
    lhsraw = "\\tf",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 27>,
    desc = "[t]elescope find files - ctrl[p] style",
    expr = 0,
    lhs = "\\tp",
    lhsraw = "\\tp",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 28>,
    desc = "neo[g]it [c]ommit",
    expr = 0,
    lhs = "\\gc",
    lhsraw = "\\gc",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 29>,
    desc = "neo[g]it open [s]plit",
    expr = 0,
    lhs = "\\gs",
    lhsraw = "\\gs",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 30>,
    desc = "neo[g]it [o]pen",
    expr = 0,
    lhs = "\\go",
    lhsraw = "\\go",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 31>,
    desc = "toggle [S]pell",
    expr = 0,
    lhs = "\\S",
    lhsraw = "\\S",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 32>,
    desc = "[f]loating windows: [q]uit/close all",
    expr = 0,
    lhs = "\\fq",
    lhsraw = "\\fq",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 33>,
    desc = "dec window [h]eight",
    expr = 0,
    lhs = "\\h-",
    lhsraw = "\\h-",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 34>,
    desc = "inc window [h]eight",
    expr = 0,
    lhs = "\\h+",
    lhsraw = "\\h+",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 35>,
    desc = "dec window [w]idth",
    expr = 0,
    lhs = "\\w-",
    lhsraw = "\\w-",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 36>,
    desc = "inc window [w]idth",
    expr = 0,
    lhs = "\\w+",
    lhsraw = "\\w+",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 37>,
    desc = "[g]it [d]iffview [f]iles [t]oggle",
    expr = 0,
    lhs = "\\gft",
    lhsraw = "\\gft",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 38>,
    desc = "[g]it [d]iffview open",
    expr = 0,
    lhs = "\\gd",
    lhsraw = "\\gd",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 39>,
    desc = "diffview [g]it [f]ile history ([c]wd)",
    expr = 0,
    lhs = "\\gfc",
    lhsraw = "\\gfc",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 40>,
    desc = "diffview [g]it [f]ile history (current [b]uffer)",
    expr = 0,
    lhs = "\\gfb",
    lhsraw = "\\gfb",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]xx",
    lhsraw = "]xx",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-xml-decode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]x",
    lhsraw = "]x",
    lnum = 608,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-xml-decode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]uu",
    lhsraw = "]uu",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-url-decode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]u",
    lhsraw = "]u",
    lnum = 608,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-url-decode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]CC",
    lhsraw = "]CC",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-decode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]yy",
    lhsraw = "]yy",
    lnum = 610,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-decode-line)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]y",
    lhsraw = "]y",
    lnum = 608,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-string-decode)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]P",
    lhsraw = "]P",
    lnum = 435,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-below)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]p",
    lhsraw = "]p",
    lnum = 433,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-put-below)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]o<Esc>",
    lhsraw = "]o\27",
    lnum = 366,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = "",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]o",
    lhsraw = "]o",
    lnum = 363,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-disable)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "] ",
    lhsraw = "] ",
    lnum = 254,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-blank-down)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]n",
    lhsraw = "]n",
    lnum = 182,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-context-next)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]f",
    lhsraw = "]f",
    lnum = 169,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-directory-next)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]<C-T>",
    lhsraw = "]<80><fc>\4T",
    lnum = 68,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-ptnext)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]T",
    lhsraw = "]T",
    lnum = 54,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-tlast)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]t",
    lhsraw = "]t",
    lnum = 52,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-tnext)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]<C-Q>",
    lhsraw = "]<80><fc>\4Q",
    lnum = 61,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-cnfile)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]Q",
    lhsraw = "]Q",
    lnum = 54,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-clast)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]q",
    lhsraw = "]q",
    lnum = 52,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-cnext)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]<C-L>",
    lhsraw = "]<80><fc>\4L",
    lnum = 61,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-lnfile)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]A",
    lhsraw = "]A",
    lnum = 54,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-last)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]a",
    lhsraw = "]a",
    lnum = 52,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-next)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "]%",
    lhsraw = "]%",
    lnum = 79,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitNormalMultiForward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 41>,
    desc = "next [h]int diagnostic",
    expr = 0,
    lhs = "]h",
    lhsraw = "]h",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 42>,
    desc = "next [w]arning diagnostic",
    expr = 0,
    lhs = "]w",
    lhsraw = "]w",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 43>,
    desc = "next [e]rror diagnostic",
    expr = 0,
    lhs = "]e",
    lhsraw = "]e",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 44>,
    desc = "last [L]oclist entry",
    expr = 0,
    lhs = "]L",
    lhsraw = "]L",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 45>,
    desc = "cycle [l]oclist right",
    expr = 0,
    lhs = "]l",
    lhsraw = "]l",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 46>,
    desc = "last quickfix entry",
    expr = 0,
    lhs = "]C",
    lhsraw = "]C",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 47>,
    desc = "[c]ycle quickfix right",
    expr = 0,
    lhs = "]c",
    lhsraw = "]c",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 48>,
    desc = "last [B]uffer",
    expr = 0,
    lhs = "]B",
    lhsraw = "]B",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 49>,
    desc = "next [b]uffer",
    expr = 0,
    lhs = "]b",
    lhsraw = "]b",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 50>,
    desc = "next [d]iagnostic",
    expr = 0,
    lhs = "]d",
    lhsraw = "]d",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Change a surrounding pair, putting replacements on new lines",
    expr = 0,
    lhs = "cS",
    lhsraw = "cS",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-change-line)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Change a surrounding pair",
    expr = 0,
    lhs = "cs",
    lhsraw = "cs",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-change)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Delete a surrounding pair",
    expr = 0,
    lhs = "ds",
    lhsraw = "ds",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-delete)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "g%",
    lhsraw = "g%",
    lnum = 71,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(MatchitNormalBackward)",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 51>,
    desc = "Toggle comment line",
    expr = 1,
    lhs = "gcc",
    lhsraw = "gcc",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 52>,
    desc = "Toggle comment",
    expr = 1,
    lhs = "gc",
    lhsraw = "gc",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 53>,
    desc = "Opens filepath or URI under cursor with the system handler (file explorer, web browser, â€¦)",
    expr = 0,
    lhs = "gx",
    lhsraw = "gx",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "yo<Esc>",
    lhsraw = "yo\27",
    lnum = 364,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = "",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "yo",
    lhsraw = "yo",
    lnum = 361,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<Plug>(unimpaired-toggle)",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "y<C-G>",
    lhsraw = "y<80><fc>\4G",
    lnum = 749,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 1,
    rhs = ":<C-U>call setreg(v:register, fugitive#Object(@%))<CR>",
    script = 1,
    scriptversion = 1,
    sid = 62,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Add a surrounding pair around the current line, on new lines (normal mode)",
    expr = 0,
    lhs = "ySS",
    lhsraw = "ySS",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-normal-cur-line)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Add a surrounding pair around a motion, on new lines (normal mode)",
    expr = 0,
    lhs = "yS",
    lhsraw = "yS",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-normal-line)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Add a surrounding pair around the current line (normal mode)",
    expr = 0,
    lhs = "yss",
    lhsraw = "yss",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-normal-cur)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Add a surrounding pair around a motion (normal mode)",
    expr = 0,
    lhs = "ys",
    lhsraw = "ys",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Plug>(nvim-surround-normal)",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-xml-decode-line)",
    lhsraw = "<80><fd>S(unimpaired-xml-decode-line)",
    lnum = 607,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_decode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-xml-decode)",
    lhsraw = "<80><fd>S(unimpaired-xml-decode)",
    lnum = 605,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_line_xml_decode",
    lhsraw = "<80><fd>Sunimpaired_line_xml_decode",
    lnum = 604,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_decode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_xml_decode",
    lhsraw = "<80><fd>Sunimpaired_xml_decode",
    lnum = 602,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-xml-encode-line)",
    lhsraw = "<80><fd>S(unimpaired-xml-encode-line)",
    lnum = 607,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_encode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-xml-encode)",
    lhsraw = "<80><fd>S(unimpaired-xml-encode)",
    lnum = 605,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_line_xml_encode",
    lhsraw = "<80><fd>Sunimpaired_line_xml_encode",
    lnum = 604,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_encode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_xml_encode",
    lhsraw = "<80><fd>Sunimpaired_xml_encode",
    lnum = 602,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("xml_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-url-decode-line)",
    lhsraw = "<80><fd>S(unimpaired-url-decode-line)",
    lnum = 607,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_decode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-url-decode)",
    lhsraw = "<80><fd>S(unimpaired-url-decode)",
    lnum = 605,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_line_url_decode",
    lhsraw = "<80><fd>Sunimpaired_line_url_decode",
    lnum = 604,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_decode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_url_decode",
    lhsraw = "<80><fd>Sunimpaired_url_decode",
    lnum = 602,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-url-encode-line)",
    lhsraw = "<80><fd>S(unimpaired-url-encode-line)",
    lnum = 607,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_encode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-url-encode)",
    lhsraw = "<80><fd>S(unimpaired-url-encode)",
    lnum = 605,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_line_url_encode",
    lhsraw = "<80><fd>Sunimpaired_line_url_encode",
    lnum = 604,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_encode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_url_encode",
    lhsraw = "<80><fd>Sunimpaired_url_encode",
    lnum = 602,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("url_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-string-decode-line)",
    lhsraw = "<80><fd>S(unimpaired-string-decode-line)",
    lnum = 607,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_decode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-string-decode)",
    lhsraw = "<80><fd>S(unimpaired-string-decode)",
    lnum = 605,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_line_string_decode",
    lhsraw = "<80><fd>Sunimpaired_line_string_decode",
    lnum = 604,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_decode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_string_decode",
    lhsraw = "<80><fd>Sunimpaired_string_decode",
    lnum = 602,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_decode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-string-encode-line)",
    lhsraw = "<80><fd>S(unimpaired-string-encode-line)",
    lnum = 607,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_encode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>(unimpaired-string-encode)",
    lhsraw = "<80><fd>S(unimpaired-string-encode)",
    lnum = 605,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_line_string_encode",
    lhsraw = "<80><fd>Sunimpaired_line_string_encode",
    lnum = 604,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_encode")."_"',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 1,
    lhs = "<Plug>unimpaired_string_encode",
    lhsraw = "<80><fd>Sunimpaired_string_encode",
    lnum = 602,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = '<SNR>63_TransformSetup("string_encode")',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedPutBelow",
    lhsraw = "<80><fd>SunimpairedPutBelow",
    lnum = 430,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":call <SNR>63_putline(']p', 'below')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedPutAbove",
    lhsraw = "<80><fd>SunimpairedPutAbove",
    lnum = 429,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":call <SNR>63_putline('[p', 'above')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-below-reformat)",
    lhsraw = "<80><fd>S(unimpaired-put-below-reformat)",
    lnum = 428,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_putline(v:count1 . ']p', 'Below')<CR>=']",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-above-reformat)",
    lhsraw = "<80><fd>S(unimpaired-put-above-reformat)",
    lnum = 427,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_putline(v:count1 . '[p', 'Above')<CR>=']",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-below-leftward)",
    lhsraw = "<80><fd>S(unimpaired-put-below-leftward)",
    lnum = 426,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_putline(v:count1 . ']p', 'Below')<CR><lt>']",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-above-leftward)",
    lhsraw = "<80><fd>S(unimpaired-put-above-leftward)",
    lnum = 425,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_putline(v:count1 . '[p', 'Above')<CR><lt>']",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-below-rightward)",
    lhsraw = "<80><fd>S(unimpaired-put-below-rightward)",
    lnum = 424,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_putline(v:count1 . ']p', 'Below')<CR>>']",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-above-rightward)",
    lhsraw = "<80><fd>S(unimpaired-put-above-rightward)",
    lnum = 423,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_putline(v:count1 . '[p', 'Above')<CR>>']",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-below)",
    lhsraw = "<80><fd>S(unimpaired-put-below)",
    lnum = 422,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":call <SNR>63_putline(']p', 'below')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-put-above)",
    lhsraw = "<80><fd>S(unimpaired-put-above)",
    lnum = 421,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":call <SNR>63_putline('[p', 'above')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)p",
    lhsraw = "<80><fd>S(unimpaired-toggle)p",
    lnum = 405,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_SetupPaste()<CR>0C",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)p",
    lhsraw = "<80><fd>S(unimpaired-disable)p",
    lnum = 404,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_SetupPaste()<CR>o",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)p",
    lhsraw = "<80><fd>S(unimpaired-enable)p",
    lnum = 403,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_SetupPaste()<CR>O",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-paste)",
    lhsraw = "<80><fd>S(unimpaired-paste)",
    lnum = 401,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_SetupPaste()<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedPaste",
    lhsraw = "<80><fd>SunimpairedPaste",
    lnum = 400,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":call <SNR>63_SetupPaste()<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)t",
    lhsraw = "<80><fd>S(unimpaired-toggle)t",
    lnum = 359,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set colorcolumn=<C-R>=<SNR>63_ColorColumn(!empty(&cc))<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)t",
    lhsraw = "<80><fd>S(unimpaired-disable)t",
    lnum = 358,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set colorcolumn=<C-R>=<SNR>63_ColorColumn(1)<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)t",
    lhsraw = "<80><fd>S(unimpaired-enable)t",
    lnum = 357,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set colorcolumn=<C-R>=<SNR>63_ColorColumn(0)<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)+",
    lhsraw = "<80><fd>S(unimpaired-toggle)+",
    lnum = 349,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set <C-R>=<SNR>63_CursorOptions()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)+",
    lhsraw = "<80><fd>S(unimpaired-disable)+",
    lnum = 348,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set nocursorline nocursorcolumn<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)+",
    lhsraw = "<80><fd>S(unimpaired-enable)+",
    lnum = 347,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set cursorline cursorcolumn<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)x",
    lhsraw = "<80><fd>S(unimpaired-toggle)x",
    lnum = 346,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set <C-R>=<SNR>63_CursorOptions()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)x",
    lhsraw = "<80><fd>S(unimpaired-disable)x",
    lnum = 345,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set nocursorline nocursorcolumn<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)x",
    lhsraw = "<80><fd>S(unimpaired-enable)x",
    lnum = 344,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set cursorline cursorcolumn<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)v",
    lhsraw = "<80><fd>S(unimpaired-toggle)v",
    lnum = 343,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>set <C-R>=(&virtualedit =~# "all") ? "virtualedit-=all" : "virtualedit+=all"<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)v",
    lhsraw = "<80><fd>S(unimpaired-disable)v",
    lnum = 342,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set virtualedit-=all<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)v",
    lhsraw = "<80><fd>S(unimpaired-enable)v",
    lnum = 341,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set virtualedit+=all<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)z",
    lhsraw = "<80><fd>S(unimpaired-toggle)z",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("spell")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)z",
    lhsraw = "<80><fd>S(unimpaired-disable)z",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nospell<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)z",
    lhsraw = "<80><fd>S(unimpaired-enable)z",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal spell<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)w",
    lhsraw = "<80><fd>S(unimpaired-toggle)w",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("wrap")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)w",
    lhsraw = "<80><fd>S(unimpaired-disable)w",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nowrap<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)w",
    lhsraw = "<80><fd>S(unimpaired-enable)w",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal wrap<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)s",
    lhsraw = "<80><fd>S(unimpaired-toggle)s",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("spell")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)s",
    lhsraw = "<80><fd>S(unimpaired-disable)s",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nospell<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)s",
    lhsraw = "<80><fd>S(unimpaired-enable)s",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal spell<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)r",
    lhsraw = "<80><fd>S(unimpaired-toggle)r",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("relativenumber")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)r",
    lhsraw = "<80><fd>S(unimpaired-disable)r",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal norelativenumber<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)r",
    lhsraw = "<80><fd>S(unimpaired-enable)r",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal relativenumber<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)n",
    lhsraw = "<80><fd>S(unimpaired-toggle)n",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("number")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)n",
    lhsraw = "<80><fd>S(unimpaired-disable)n",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nonumber<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)n",
    lhsraw = "<80><fd>S(unimpaired-enable)n",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal number<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)l",
    lhsraw = "<80><fd>S(unimpaired-toggle)l",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("list")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)l",
    lhsraw = "<80><fd>S(unimpaired-disable)l",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nolist<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)l",
    lhsraw = "<80><fd>S(unimpaired-enable)l",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal list<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)i",
    lhsraw = "<80><fd>S(unimpaired-toggle)i",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>set <C-R>=<SNR>63_Toggle("ignorecase")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)i",
    lhsraw = "<80><fd>S(unimpaired-disable)i",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set noignorecase<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)i",
    lhsraw = "<80><fd>S(unimpaired-enable)i",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set ignorecase<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)h",
    lhsraw = "<80><fd>S(unimpaired-toggle)h",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>set <C-R>=<SNR>63_Toggle("hlsearch")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)h",
    lhsraw = "<80><fd>S(unimpaired-disable)h",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set nohlsearch<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)h",
    lhsraw = "<80><fd>S(unimpaired-enable)h",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set hlsearch<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)d",
    lhsraw = "<80><fd>S(unimpaired-toggle)d",
    lnum = 330,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U><C-R>=&diff ? "diffoff" : "diffthis"<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)d",
    lhsraw = "<80><fd>S(unimpaired-disable)d",
    lnum = 329,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>diffoff<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)d",
    lhsraw = "<80><fd>S(unimpaired-enable)d",
    lnum = 328,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>diffthis<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)|",
    lhsraw = "<80><fd>S(unimpaired-toggle)|",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("cursorcolumn")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)|",
    lhsraw = "<80><fd>S(unimpaired-disable)|",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nocursorcolumn<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)|",
    lhsraw = "<80><fd>S(unimpaired-enable)|",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal cursorcolumn<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)u",
    lhsraw = "<80><fd>S(unimpaired-toggle)u",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("cursorcolumn")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)u",
    lhsraw = "<80><fd>S(unimpaired-disable)u",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nocursorcolumn<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)u",
    lhsraw = "<80><fd>S(unimpaired-enable)u",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal cursorcolumn<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)_",
    lhsraw = "<80><fd>S(unimpaired-toggle)_",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("cursorline")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)_",
    lhsraw = "<80><fd>S(unimpaired-disable)_",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nocursorline<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)_",
    lhsraw = "<80><fd>S(unimpaired-enable)_",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal cursorline<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)-",
    lhsraw = "<80><fd>S(unimpaired-toggle)-",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("cursorline")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)-",
    lhsraw = "<80><fd>S(unimpaired-disable)-",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nocursorline<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)-",
    lhsraw = "<80><fd>S(unimpaired-enable)-",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal cursorline<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)c",
    lhsraw = "<80><fd>S(unimpaired-toggle)c",
    lnum = 317,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>setlocal <C-R>=<SNR>63_Toggle("cursorline")<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)c",
    lhsraw = "<80><fd>S(unimpaired-disable)c",
    lnum = 316,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal nocursorline<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)c",
    lhsraw = "<80><fd>S(unimpaired-enable)c",
    lnum = 315,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>setlocal cursorline<C-R>=<SNR>63_StatuslineRefresh()<CR><CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-toggle)b",
    lhsraw = "<80><fd>S(unimpaired-toggle)b",
    lnum = 322,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ':<C-U>set background=<C-R>=&background == "dark" ? "light" : "dark"<CR><CR>',
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-disable)b",
    lhsraw = "<80><fd>S(unimpaired-disable)b",
    lnum = 321,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set background=dark<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-enable)b",
    lhsraw = "<80><fd>S(unimpaired-enable)b",
    lnum = 320,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>set background=light<CR>",
    script = 1,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveSelectionDown",
    lhsraw = "<80><fd>SunimpairedMoveSelectionDown",
    lnum = 291,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionDown(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveSelectionUp",
    lhsraw = "<80><fd>SunimpairedMoveSelectionUp",
    lnum = 290,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionUp(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveDown",
    lhsraw = "<80><fd>SunimpairedMoveDown",
    lnum = 289,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Move('+',v:count1,'down')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedMoveUp",
    lhsraw = "<80><fd>SunimpairedMoveUp",
    lnum = 288,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Move('--',v:count1,'up')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-selection-down)",
    lhsraw = "<80><fd>S(unimpaired-move-selection-down)",
    lnum = 287,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionDown(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-selection-up)",
    lhsraw = "<80><fd>S(unimpaired-move-selection-up)",
    lnum = 286,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_MoveSelectionUp(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-down)",
    lhsraw = "<80><fd>S(unimpaired-move-down)",
    lnum = 285,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Move('+',v:count1,'down')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-move-up)",
    lhsraw = "<80><fd>S(unimpaired-move-up)",
    lnum = 284,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Move('--',v:count1,'up')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedBlankDown",
    lhsraw = "<80><fd>SunimpairedBlankDown",
    lnum = 251,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe <SNR>63_BlankDown()<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedBlankUp",
    lhsraw = "<80><fd>SunimpairedBlankUp",
    lnum = 250,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe <SNR>63_BlankUp()<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-blank-down)",
    lhsraw = "<80><fd>S(unimpaired-blank-down)",
    lnum = 248,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe <SNR>63_BlankDown()<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-blank-up)",
    lhsraw = "<80><fd>S(unimpaired-blank-up)",
    lnum = 247,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>exe <SNR>63_BlankUp()<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedContextNext",
    lhsraw = "<80><fd>SunimpairedContextNext",
    lnum = 189,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Context(0)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedContextPrevious",
    lhsraw = "<80><fd>SunimpairedContextPrevious",
    lnum = 188,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Context(1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-context-next)",
    lhsraw = "<80><fd>S(unimpaired-context-next)",
    lnum = 175,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Context(0)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-context-previous)",
    lhsraw = "<80><fd>S(unimpaired-context-previous)",
    lnum = 174,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call <SNR>63_Context(1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedDirectoryPrevious",
    lhsraw = "<80><fd>SunimpairedDirectoryPrevious",
    lnum = 168,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>execute <SNR>63_PreviousFileEntry(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedDirectoryNext",
    lhsraw = "<80><fd>SunimpairedDirectoryNext",
    lnum = 167,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>execute <SNR>63_NextFileEntry(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-directory-previous)",
    lhsraw = "<80><fd>S(unimpaired-directory-previous)",
    lnum = 166,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>execute <SNR>63_PreviousFileEntry(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-directory-next)",
    lhsraw = "<80><fd>S(unimpaired-directory-next)",
    lnum = 165,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>execute <SNR>63_NextFileEntry(v:count1)<CR>",
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedTPNext",
    lhsraw = "<80><fd>SunimpairedTPNext",
    lnum = 66,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "p".(v:count ? v:count : "")."tnext"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedTPPrevious",
    lhsraw = "<80><fd>SunimpairedTPPrevious",
    lnum = 65,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "p".(v:count ? v:count : "")."tprevious"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-ptnext)",
    lhsraw = "<80><fd>S(unimpaired-ptnext)",
    lnum = 64,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe v:count1 . "ptnext"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-ptprevious)",
    lhsraw = "<80><fd>S(unimpaired-ptprevious)",
    lnum = 63,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe v:count1 . "ptprevious"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedTLast",
    lhsraw = "<80><fd>SunimpairedTLast",
    lnum = 50,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."tlast"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedTFirst",
    lhsraw = "<80><fd>SunimpairedTFirst",
    lnum = 49,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."tfirst"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedTNext",
    lhsraw = "<80><fd>SunimpairedTNext",
    lnum = 48,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedTPrevious",
    lhsraw = "<80><fd>SunimpairedTPrevious",
    lnum = 47,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-tlast)",
    lhsraw = "<80><fd>S(unimpaired-tlast)",
    lnum = 46,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "trewind" : "tlast"<CR><CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-tfirst)",
    lhsraw = "<80><fd>S(unimpaired-tfirst)",
    lnum = 45,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "trewind" : "tfirst"<CR><CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-tnext)",
    lhsraw = "<80><fd>S(unimpaired-tnext)",
    lnum = 44,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-tprevious)",
    lhsraw = "<80><fd>S(unimpaired-tprevious)",
    lnum = 43,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedQNFile",
    lhsraw = "<80><fd>SunimpairedQNFile",
    lnum = 59,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedQPFile",
    lhsraw = "<80><fd>SunimpairedQPFile",
    lnum = 58,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-cnfile)",
    lhsraw = "<80><fd>S(unimpaired-cnfile)",
    lnum = 57,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-cpfile)",
    lhsraw = "<80><fd>S(unimpaired-cpfile)",
    lnum = 56,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedQLast",
    lhsraw = "<80><fd>SunimpairedQLast",
    lnum = 50,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."clast"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedQFirst",
    lhsraw = "<80><fd>SunimpairedQFirst",
    lnum = 49,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cfirst"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedQNext",
    lhsraw = "<80><fd>SunimpairedQNext",
    lnum = 48,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedQPrevious",
    lhsraw = "<80><fd>SunimpairedQPrevious",
    lnum = 47,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-clast)",
    lhsraw = "<80><fd>S(unimpaired-clast)",
    lnum = 46,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "cc" : "clast"<CR><CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-cfirst)",
    lhsraw = "<80><fd>S(unimpaired-cfirst)",
    lnum = 45,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "cc" : "cfirst"<CR><CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-cnext)",
    lhsraw = "<80><fd>S(unimpaired-cnext)",
    lnum = 44,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-cprevious)",
    lhsraw = "<80><fd>S(unimpaired-cprevious)",
    lnum = 43,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedLNFile",
    lhsraw = "<80><fd>SunimpairedLNFile",
    lnum = 59,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedLPFile",
    lhsraw = "<80><fd>SunimpairedLPFile",
    lnum = 58,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-lnfile)",
    lhsraw = "<80><fd>S(unimpaired-lnfile)",
    lnum = 57,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-lpfile)",
    lhsraw = "<80><fd>S(unimpaired-lpfile)",
    lnum = 56,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedLLast",
    lhsraw = "<80><fd>SunimpairedLLast",
    lnum = 50,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."llast"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedLFirst",
    lhsraw = "<80><fd>SunimpairedLFirst",
    lnum = 49,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lfirst"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedLNext",
    lhsraw = "<80><fd>SunimpairedLNext",
    lnum = 48,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedLPrevious",
    lhsraw = "<80><fd>SunimpairedLPrevious",
    lnum = 47,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-llast)",
    lhsraw = "<80><fd>S(unimpaired-llast)",
    lnum = 46,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "ll" : "llast"<CR><CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-lfirst)",
    lhsraw = "<80><fd>S(unimpaired-lfirst)",
    lnum = 45,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "ll" : "lfirst"<CR><CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-lnext)",
    lhsraw = "<80><fd>S(unimpaired-lnext)",
    lnum = 44,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-lprevious)",
    lhsraw = "<80><fd>S(unimpaired-lprevious)",
    lnum = 43,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zv',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedBLast",
    lhsraw = "<80><fd>SunimpairedBLast",
    lnum = 50,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."blast"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedBFirst",
    lhsraw = "<80><fd>SunimpairedBFirst",
    lnum = 49,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."bfirst"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedBNext",
    lhsraw = "<80><fd>SunimpairedBNext",
    lnum = 48,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedBPrevious",
    lhsraw = "<80><fd>SunimpairedBPrevious",
    lnum = 47,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-blast)",
    lhsraw = "<80><fd>S(unimpaired-blast)",
    lnum = 46,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "buffer" : "blast"<CR><CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-bfirst)",
    lhsraw = "<80><fd>S(unimpaired-bfirst)",
    lnum = 45,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "buffer" : "bfirst"<CR><CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-bnext)",
    lhsraw = "<80><fd>S(unimpaired-bnext)",
    lnum = 44,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-bprevious)",
    lhsraw = "<80><fd>S(unimpaired-bprevious)",
    lnum = 43,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedALast",
    lhsraw = "<80><fd>SunimpairedALast",
    lnum = 50,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."last"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedAFirst",
    lhsraw = "<80><fd>SunimpairedAFirst",
    lnum = 49,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."first"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedANext",
    lhsraw = "<80><fd>SunimpairedANext",
    lnum = 48,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."next"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>unimpairedAPrevious",
    lhsraw = "<80><fd>SunimpairedAPrevious",
    lnum = 47,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."previous"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-last)",
    lhsraw = "<80><fd>S(unimpaired-last)",
    lnum = 46,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "argument" : "last"<CR><CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-first)",
    lhsraw = "<80><fd>S(unimpaired-first)",
    lnum = 45,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U><C-R>=v:count ? v:count . "argument" : "first"<CR><CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-next)",
    lhsraw = "<80><fd>S(unimpaired-next)",
    lnum = 44,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."next"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(unimpaired-previous)",
    lhsraw = "<80><fd>S(unimpaired-previous)",
    lnum = 43,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>exe "".(v:count ? v:count : "")."previous"<CR>',
    script = 0,
    scriptversion = 1,
    sid = 63,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>fugitive:",
    lhsraw = "<80><fd>Sfugitive:",
    lnum = 724,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = "",
    script = 1,
    scriptversion = 1,
    sid = 62,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>fugitive:y<C-G>",
    lhsraw = "<80><fd>Sfugitive:y<80><fc>\4G",
    lnum = 723,
    mode = "n",
    mode_bits = 1,
    noremap = 2,
    nowait = 0,
    rhs = ":<C-U>call setreg(v:register, fugitive#Object(@%))<CR>",
    script = 1,
    scriptversion = 1,
    sid = 62,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>PlenaryTestFile",
    lhsraw = "<80><fd>SPlenaryTestFile",
    lnum = 9,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":lua require('plenary.test_harness').test_file(vim.fn.expand(\"%:p\"))<CR>",
    script = 0,
    scriptversion = 1,
    sid = 60,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 54>,
    desc = "LuaSnip: Repeat last node expansion",
    expr = 0,
    lhs = "<Plug>luasnip-expand-repeat",
    lhsraw = "<80><fd>Sluasnip-expand-repeat",
    lnum = 0,
    mode = " ",
    mode_bits = 71,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 55>,
    desc = "LuaSnip: Removes current snippet from jumplist",
    expr = 0,
    lhs = "<Plug>luasnip-delete-check",
    lhsraw = "<80><fd>Sluasnip-delete-check",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitNormalMultiForward)",
    lhsraw = "<80><fd>S(MatchitNormalMultiForward)",
    lnum = 60,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>call matchit#MultiMatch("W",  "n")<CR>',
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitNormalMultiBackward)",
    lhsraw = "<80><fd>S(MatchitNormalMultiBackward)",
    lnum = 59,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ':<C-U>call matchit#MultiMatch("bW", "n")<CR>',
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitNormalBackward)",
    lhsraw = "<80><fd>S(MatchitNormalBackward)",
    lnum = 51,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#Match_wrapper('',0,'n')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    expr = 0,
    lhs = "<Plug>(MatchitNormalForward)",
    lhsraw = "<80><fd>S(MatchitNormalForward)",
    lnum = 50,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = ":<C-U>call matchit#Match_wrapper('',1,'n')<CR>",
    script = 0,
    scriptversion = 1,
    sid = 32,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 56>,
    desc = "[telescope] live grep filetype",
    expr = 0,
    lhs = "<M-g>",
    lhsraw = "<80><fc>\bg",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 57>,
    desc = "[telescope] fuzzy grep filetype",
    expr = 0,
    lhs = "<M-f>",
    lhsraw = "<80><fc>\bf",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 58>,
    desc = "[telescope] live grep",
    expr = 0,
    lhs = "<C-G>",
    lhsraw = "<80><fc>\4G",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 59>,
    desc = "[telescope] old files",
    expr = 0,
    lhs = "<M-p>",
    lhsraw = "<80><fc>\bp",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 60>,
    desc = "Change a surrounding pair, putting replacements on new lines",
    expr = 1,
    lhs = "<Plug>(nvim-surround-change-line)",
    lhsraw = "<80><fd>S(nvim-surround-change-line)",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 61>,
    desc = "Change a surrounding pair",
    expr = 1,
    lhs = "<Plug>(nvim-surround-change)",
    lhsraw = "<80><fd>S(nvim-surround-change)",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 62>,
    desc = "Delete a surrounding pair",
    expr = 1,
    lhs = "<Plug>(nvim-surround-delete)",
    lhsraw = "<80><fd>S(nvim-surround-delete)",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 63>,
    desc = "Add a surrounding pair around the current line, on new lines (normal mode)",
    expr = 1,
    lhs = "<Plug>(nvim-surround-normal-cur-line)",
    lhsraw = "<80><fd>S(nvim-surround-normal-cur-line)",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 64>,
    desc = "Add a surrounding pair around a motion, on new lines (normal mode)",
    expr = 1,
    lhs = "<Plug>(nvim-surround-normal-line)",
    lhsraw = "<80><fd>S(nvim-surround-normal-line)",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 65>,
    desc = "Add a surrounding pair around the current line (normal mode)",
    expr = 1,
    lhs = "<Plug>(nvim-surround-normal-cur)",
    lhsraw = "<80><fd>S(nvim-surround-normal-cur)",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 66>,
    desc = "Add a surrounding pair around a motion (normal mode)",
    expr = 1,
    lhs = "<Plug>(nvim-surround-normal)",
    lhsraw = "<80><fd>S(nvim-surround-normal)",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    replace_keycodes = 1,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 1
  }, {
    abbr = 0,
    buffer = 0,
    desc = "move UP full-page and center",
    expr = 0,
    lhs = "<C-B>",
    lhsraw = "<80><fc>\4B",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<C-B>zz",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "move DOWN [f]ull-page and center",
    expr = 0,
    lhs = "<C-F>",
    lhsraw = "<80><fc>\4F",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<C-F>zz",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "move [u]p half-page and center",
    expr = 0,
    lhs = "<C-U>",
    lhsraw = "<80><fc>\4U",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<C-U>zz",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "move [d]own half-page and center",
    expr = 0,
    lhs = "<C-D>",
    lhsraw = "<80><fc>\4D",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<C-D>zz",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 67>,
    desc = "toggle quickfix list",
    expr = 0,
    lhs = "<C-C>",
    lhsraw = "<80><fc>\4C",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 68>,
    expr = 0,
    lhs = "<C-S-N>",
    lhsraw = "<80><fc>\6N",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 69>,
    expr = 0,
    lhs = "<C-S-P>",
    lhsraw = "<80><fc>\6P",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 70>,
    expr = 0,
    lhs = "<C-`>",
    lhsraw = "<80><fc>\4`",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 71>,
    expr = 0,
    lhs = "<C-3>",
    lhsraw = "<80><fc>\0043",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 72>,
    expr = 0,
    lhs = "<C-2>",
    lhsraw = "<80><fc>\0042",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 73>,
    expr = 0,
    lhs = "<C-1>",
    lhsraw = "<80><fc>\0041",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 74>,
    expr = 0,
    lhs = "<C-E>",
    lhsraw = "<80><fc>\4E",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 75>,
    expr = 0,
    lhs = "<C-A>",
    lhsraw = "<80><fc>\4A",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = "Show diagnostics under the cursor",
    expr = 0,
    lhs = "<C-W><C-D>",
    lhsraw = "<80><fc>\4W<80><fc>\4D",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 0,
    nowait = 0,
    rhs = "<C-W>d",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    callback = <function 76>,
    desc = "Show diagnostics under the cursor",
    expr = 0,
    lhs = "<C-W>d",
    lhsraw = "<80><fc>\4Wd",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  }, {
    abbr = 0,
    buffer = 0,
    desc = ":help CTRL-L-default",
    expr = 0,
    lhs = "<C-L>",
    lhsraw = "<80><fc>\4L",
    lnum = 0,
    mode = "n",
    mode_bits = 1,
    noremap = 1,
    nowait = 0,
    rhs = "<Cmd>nohlsearch|diffupdate|normal! <C-L><CR>",
    script = 0,
    scriptversion = 1,
    sid = -8,
    silent = 0
  } }